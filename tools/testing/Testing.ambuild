# vim: set ts=2 sw=2 tw=99 et ft=python:
# 
# Copyright (C) 2004-2015 AlliedModders LLC
# 
# This file is part of SourcePawn.
# 
# SourcePawn is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.
# 
# SourcePawn is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along with
# SourcePawn. If not, see http://www.gnu.org/licenses/.
#
import os
import sys

builder.SetBuildFolder('testing')

Scripts = [
  'test-compiler',
  'test-runtime',
  'test-all',
]

def fixup_path(mode, path):
  if builder.target_platform == 'windows':
    if mode == '.sh':
      return path.replace('\\', '\\\\')
  return path

def gen_scripts(ext):
  for script in Scripts:
    Inputs = [
      os.path.join(builder.currentSourcePath, 'generate_scripts.py'),
      script + ext + '.in',
    ]
    Outputs = [
      script + ext,
    ]
  
    builder.AddCommand(
      inputs = Inputs,
      argv = [
        sys.executable,
        os.path.join(builder.currentSourcePath, 'generate_scripts.py'),
        fixup_path(ext, builder.sourcePath),
        fixup_path(ext, builder.buildPath),
        os.path.join(builder.currentSourcePath, script + ext + '.in'),
        os.path.join(builder.buildPath, 'testing', script + ext),
        fixup_path(ext, os.path.join(builder.buildPath, SP.spcomp.binary.path)),
        fixup_path(ext, os.path.join(builder.buildPath, SP.spshell.binary.path)),
      ],
      outputs = Outputs
    )
gen_scripts('.sh')
gen_scripts('.bat')
